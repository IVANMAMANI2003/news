version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: news_postgres
    environment:
      POSTGRES_DB: news_scraping
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: news_redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  scraper:
    build: .
    container_name: news_scraper
    depends_on:
      - postgres
      - redis
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: news_scraping
      DB_USER: postgres
      DB_PASSWORD: 123456
      LOG_LEVEL: INFO
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    command: ["python", "scheduler.py", "--mode", "once"]

  celery_worker:
    build: .
    container_name: news_celery_worker
    depends_on:
      - redis
      - postgres
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: news_scraping
      DB_USER: postgres
      DB_PASSWORD: 123456
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    command: ["celery", "-A", "tasks.celery_app", "worker", "--loglevel=INFO", "--concurrency=2"]
    restart: unless-stopped

  celery_beat:
    build: .
    container_name: news_celery_beat
    depends_on:
      - redis
      - postgres
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: news_scraping
      DB_USER: postgres
      DB_PASSWORD: 123456
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    command: ["celery", "-A", "tasks.celery_app", "beat", "--loglevel=INFO"]
    restart: unless-stopped

  flower:
    image: mher/flower:2.0.1
    container_name: news_celery_flower
    depends_on:
      - redis
    ports:
      - "5555:5555"
    # El entrypoint del contenedor ya es 'flower'; solo pasamos args
    command: ["--broker=redis://redis:6379/0", "--port=5555"]
    restart: unless-stopped

volumes:
  postgres_data:
